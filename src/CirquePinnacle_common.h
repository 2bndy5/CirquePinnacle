#ifndef CIRQUEPINNACLE_ARCH_COMMON_H_
#define CIRQUEPINNACLE_ARCH_COMMON_H_

#ifndef PINNACLE_NO_ANYMEAS_SUPPORT
    /**
     * This will enable library support of the Pinnacle ASIC's anymeas mode (advanced usage).
     * @note @parblock Arduino users need to comment out this line to save space on memory.
     *
     * All other builds using CMake (including the python bindings) can simply define
     * `-D PINNACLE_NO_ANYMEAS_SUPPORT` as a CMake option.
     * @endparblock
     */
    #define PINNACLE_ANYMEAS_SUPPORT
#endif

#ifndef PINNACLE_DEV_HW_DEBUG
    // a switch to expose a convenient function for HW debugging.
    #define PINNACLE_DEV_HW_DEBUG false
#endif

#if defined(ARDUINO)
    #include <Arduino.h>
    #include <SPI.h>
    #include <Wire.h>

    #ifndef PINNACLE_SPI_SPEED
        // Default is the maximum supported SPI speed (13 MHz)
        #define PINNACLE_SPI_SPEED 13000000
    #endif

    // alias for SPI bus implementation
    #define _SPI SPIClass
    // alias for I2C bus implementation
    #define _I2C TwoWire

    #ifdef NUM_DIGITAL_PINS
        #if NUM_DIGITAL_PINS < 256
typedef uint8_t pinnacle_gpio_t;
        #else
typedef uint16_t pinnacle_gpio_t;
        #endif
    #else
typedef uint16_t pinnacle_gpio_t;
    #endif

    #define PINNACLE_SS_CTRL(pin, value) digitalWrite(pin, value)

    #define PINNACLE_USE_ARDUINO_API

#else
    // all other platforms/frameworks will be included via "utility/includes.h" file generated by CMake.
    // see src/cmake/auto_config_driver.cmake script for supported options (on linux)
    #include "utility/includes.h"
#endif

#endif // CIRQUEPINNACLE_ARCH_COMMON_H_
